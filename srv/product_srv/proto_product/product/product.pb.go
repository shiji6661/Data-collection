// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
<<<<<<< HEAD
// 	protoc-gen-go v1.36.6
=======
// 	protoc-gen-go v1.36.5
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
// 	protoc        v3.19.4
// source: product.proto

package product

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// todo 商品关键字查询
type ProductKeywordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keyword       string                 `protobuf:"bytes,1,opt,name=Keyword,proto3" json:"Keyword,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductKeywordRequest) Reset() {
	*x = ProductKeywordRequest{}
	mi := &file_product_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductKeywordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductKeywordRequest) ProtoMessage() {}

func (x *ProductKeywordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductKeywordRequest.ProtoReflect.Descriptor instead.
func (*ProductKeywordRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{0}
}

func (x *ProductKeywordRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type ProductKeywordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*NewProductList      `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductKeywordResponse) Reset() {
	*x = ProductKeywordResponse{}
	mi := &file_product_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductKeywordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductKeywordResponse) ProtoMessage() {}

func (x *ProductKeywordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductKeywordResponse.ProtoReflect.Descriptor instead.
func (*ProductKeywordResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{1}
}

func (x *ProductKeywordResponse) GetList() []*NewProductList {
	if x != nil {
		return x.List
	}
	return nil
}

// TODO: 商品推荐
type ProductRecommendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductRecommendRequest) Reset() {
	*x = ProductRecommendRequest{}
	mi := &file_product_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductRecommendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductRecommendRequest) ProtoMessage() {}

func (x *ProductRecommendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductRecommendRequest.ProtoReflect.Descriptor instead.
func (*ProductRecommendRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{2}
}

type ProductRecommendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*NewProductList      `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductRecommendResponse) Reset() {
	*x = ProductRecommendResponse{}
	mi := &file_product_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductRecommendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductRecommendResponse) ProtoMessage() {}

func (x *ProductRecommendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductRecommendResponse.ProtoReflect.Descriptor instead.
func (*ProductRecommendResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{3}
}

func (x *ProductRecommendResponse) GetList() []*NewProductList {
	if x != nil {
		return x.List
	}
	return nil
}

// todo:商品详情
type ProductInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreName     string                 `protobuf:"bytes,1,opt,name=StoreName,proto3" json:"StoreName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductInfoRequest) Reset() {
	*x = ProductInfoRequest{}
	mi := &file_product_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfoRequest) ProtoMessage() {}

func (x *ProductInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfoRequest.ProtoReflect.Descriptor instead.
func (*ProductInfoRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{4}
}

func (x *ProductInfoRequest) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

type ProductInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*ProductList         `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductInfoResponse) Reset() {
	*x = ProductInfoResponse{}
	mi := &file_product_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfoResponse) ProtoMessage() {}

func (x *ProductInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfoResponse.ProtoReflect.Descriptor instead.
func (*ProductInfoResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{5}
}

func (x *ProductInfoResponse) GetList() []*ProductList {
	if x != nil {
		return x.List
	}
	return nil
}

type ProductList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	MerId         int64                  `protobuf:"varint,2,opt,name=MerId,proto3" json:"MerId,omitempty"`
	StoreName     string                 `protobuf:"bytes,3,opt,name=StoreName,proto3" json:"StoreName,omitempty"`
	StoreInfo     string                 `protobuf:"bytes,4,opt,name=StoreInfo,proto3" json:"StoreInfo,omitempty"`
	CateId        string                 `protobuf:"bytes,5,opt,name=CateId,proto3" json:"CateId,omitempty"`
	Price         float32                `protobuf:"fixed32,6,opt,name=Price,proto3" json:"Price,omitempty"`
	Sales         int64                  `protobuf:"varint,7,opt,name=Sales,proto3" json:"Sales,omitempty"`
	Stock         int64                  `protobuf:"varint,8,opt,name=Stock,proto3" json:"Stock,omitempty"`
	IsShow        int64                  `protobuf:"varint,9,opt,name=IsShow,proto3" json:"IsShow,omitempty"`
	Cost          float32                `protobuf:"fixed32,10,opt,name=Cost,proto3" json:"Cost,omitempty"`
	IsGood        int64                  `protobuf:"varint,11,opt,name=IsGood,proto3" json:"IsGood,omitempty"`
	Browse        int64                  `protobuf:"varint,12,opt,name=Browse,proto3" json:"Browse,omitempty"`
	ProductSortId int64                  `protobuf:"varint,13,opt,name=ProductSortId,proto3" json:"ProductSortId,omitempty"`
	Pid           int64                  `protobuf:"varint,14,opt,name=Pid,proto3" json:"Pid,omitempty"`
	CateName      string                 `protobuf:"bytes,15,opt,name=CateName,proto3" json:"CateName,omitempty"`
	Sort          int64                  `protobuf:"varint,16,opt,name=Sort,proto3" json:"Sort,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductList) Reset() {
	*x = ProductList{}
	mi := &file_product_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductList) ProtoMessage() {}

func (x *ProductList) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductList.ProtoReflect.Descriptor instead.
func (*ProductList) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{6}
}

func (x *ProductList) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductList) GetMerId() int64 {
	if x != nil {
		return x.MerId
	}
	return 0
}

func (x *ProductList) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *ProductList) GetStoreInfo() string {
	if x != nil {
		return x.StoreInfo
	}
	return ""
}

func (x *ProductList) GetCateId() string {
	if x != nil {
		return x.CateId
	}
	return ""
}

func (x *ProductList) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductList) GetSales() int64 {
	if x != nil {
		return x.Sales
	}
	return 0
}

func (x *ProductList) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ProductList) GetIsShow() int64 {
	if x != nil {
		return x.IsShow
	}
	return 0
}

func (x *ProductList) GetCost() float32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *ProductList) GetIsGood() int64 {
	if x != nil {
		return x.IsGood
	}
	return 0
}

func (x *ProductList) GetBrowse() int64 {
	if x != nil {
		return x.Browse
	}
	return 0
}

func (x *ProductList) GetProductSortId() int64 {
	if x != nil {
		return x.ProductSortId
	}
	return 0
}

func (x *ProductList) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ProductList) GetCateName() string {
	if x != nil {
		return x.CateName
	}
	return ""
}

func (x *ProductList) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

// todo 分类浏览
type ProductCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CateId        string                 `protobuf:"bytes,1,opt,name=cateId,proto3" json:"cateId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductCategoryRequest) Reset() {
	*x = ProductCategoryRequest{}
	mi := &file_product_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCategoryRequest) ProtoMessage() {}

func (x *ProductCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCategoryRequest.ProtoReflect.Descriptor instead.
func (*ProductCategoryRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{7}
}

func (x *ProductCategoryRequest) GetCateId() string {
	if x != nil {
		return x.CateId
	}
	return ""
}

type ProductCategoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*ProductList         `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductCategoryResponse) Reset() {
	*x = ProductCategoryResponse{}
	mi := &file_product_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCategoryResponse) ProtoMessage() {}

func (x *ProductCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCategoryResponse.ProtoReflect.Descriptor instead.
func (*ProductCategoryResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{8}
}

func (x *ProductCategoryResponse) GetList() []*ProductList {
	if x != nil {
		return x.List
	}
	return nil
}

// todo 商品筛选
type ProductFilterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinPrice      float64                `protobuf:"fixed64,1,opt,name=min_price,json=minPrice,proto3" json:"min_price,omitempty"`
	MaxPrice      float64                `protobuf:"fixed64,2,opt,name=max_price,json=maxPrice,proto3" json:"max_price,omitempty"`
	CateId        string                 `protobuf:"bytes,3,opt,name=cate_id,json=cateId,proto3" json:"cate_id,omitempty"`
	Sales         int64                  `protobuf:"varint,4,opt,name=sales,proto3" json:"sales,omitempty"`
	IsShow        int64                  `protobuf:"varint,5,opt,name=is_show,json=isShow,proto3" json:"is_show,omitempty"`
	IsHot         int64                  `protobuf:"varint,6,opt,name=is_hot,json=isHot,proto3" json:"is_hot,omitempty"`
	IsBenefit     int64                  `protobuf:"varint,7,opt,name=is_benefit,json=isBenefit,proto3" json:"is_benefit,omitempty"`
	IsBest        int64                  `protobuf:"varint,8,opt,name=is_best,json=isBest,proto3" json:"is_best,omitempty"`
	IsNew         int64                  `protobuf:"varint,9,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
	IsSeckill     int64                  `protobuf:"varint,10,opt,name=is_seckill,json=isSeckill,proto3" json:"is_seckill,omitempty"`
	IsBargain     int64                  `protobuf:"varint,11,opt,name=is_bargain,json=isBargain,proto3" json:"is_bargain,omitempty"`
	Name          string                 `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductFilterRequest) Reset() {
	*x = ProductFilterRequest{}
	mi := &file_product_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductFilterRequest) ProtoMessage() {}

func (x *ProductFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductFilterRequest.ProtoReflect.Descriptor instead.
func (*ProductFilterRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{9}
}

func (x *ProductFilterRequest) GetMinPrice() float64 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *ProductFilterRequest) GetMaxPrice() float64 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *ProductFilterRequest) GetCateId() string {
	if x != nil {
		return x.CateId
	}
	return ""
}

func (x *ProductFilterRequest) GetSales() int64 {
	if x != nil {
		return x.Sales
	}
	return 0
}

func (x *ProductFilterRequest) GetIsShow() int64 {
	if x != nil {
		return x.IsShow
	}
	return 0
}

func (x *ProductFilterRequest) GetIsHot() int64 {
	if x != nil {
		return x.IsHot
	}
	return 0
}

func (x *ProductFilterRequest) GetIsBenefit() int64 {
	if x != nil {
		return x.IsBenefit
	}
	return 0
}

func (x *ProductFilterRequest) GetIsBest() int64 {
	if x != nil {
		return x.IsBest
	}
	return 0
}

func (x *ProductFilterRequest) GetIsNew() int64 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *ProductFilterRequest) GetIsSeckill() int64 {
	if x != nil {
		return x.IsSeckill
	}
	return 0
}

func (x *ProductFilterRequest) GetIsBargain() int64 {
	if x != nil {
		return x.IsBargain
	}
	return 0
}

func (x *ProductFilterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ProductFilterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*NewProductList      `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductFilterResponse) Reset() {
	*x = ProductFilterResponse{}
	mi := &file_product_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductFilterResponse) ProtoMessage() {}

func (x *ProductFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductFilterResponse.ProtoReflect.Descriptor instead.
func (*ProductFilterResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{10}
}

func (x *ProductFilterResponse) GetList() []*NewProductList {
	if x != nil {
		return x.List
	}
	return nil
}

type NewProductList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MerId         int64                  `protobuf:"varint,1,opt,name=MerId,proto3" json:"MerId,omitempty"`
	Image         string                 `protobuf:"bytes,2,opt,name=Image,proto3" json:"Image,omitempty"`
	StoreName     string                 `protobuf:"bytes,3,opt,name=StoreName,proto3" json:"StoreName,omitempty"`
	StoreInfo     string                 `protobuf:"bytes,4,opt,name=StoreInfo,proto3" json:"StoreInfo,omitempty"`
	CateId        string                 `protobuf:"bytes,5,opt,name=CateId,proto3" json:"CateId,omitempty"`
	Price         float32                `protobuf:"fixed32,6,opt,name=Price,proto3" json:"Price,omitempty"`
	VipPrice      float32                `protobuf:"fixed32,7,opt,name=VipPrice,proto3" json:"VipPrice,omitempty"`
	Sales         int64                  `protobuf:"varint,8,opt,name=Sales,proto3" json:"Sales,omitempty"`
	Stock         int64                  `protobuf:"varint,9,opt,name=Stock,proto3" json:"Stock,omitempty"`
	IsPostage     int64                  `protobuf:"varint,10,opt,name=IsPostage,proto3" json:"IsPostage,omitempty"`
	Browse        int64                  `protobuf:"varint,11,opt,name=Browse,proto3" json:"Browse,omitempty"`
	Keyword       string                 `protobuf:"bytes,12,opt,name=Keyword,proto3" json:"Keyword,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewProductList) Reset() {
	*x = NewProductList{}
	mi := &file_product_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewProductList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewProductList) ProtoMessage() {}

func (x *NewProductList) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewProductList.ProtoReflect.Descriptor instead.
func (*NewProductList) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{11}
}

func (x *NewProductList) GetMerId() int64 {
	if x != nil {
		return x.MerId
	}
	return 0
}

func (x *NewProductList) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *NewProductList) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *NewProductList) GetStoreInfo() string {
	if x != nil {
		return x.StoreInfo
	}
	return ""
}

func (x *NewProductList) GetCateId() string {
	if x != nil {
		return x.CateId
	}
	return ""
}

func (x *NewProductList) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *NewProductList) GetVipPrice() float32 {
	if x != nil {
		return x.VipPrice
	}
	return 0
}

func (x *NewProductList) GetSales() int64 {
	if x != nil {
		return x.Sales
	}
	return 0
}

func (x *NewProductList) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *NewProductList) GetIsPostage() int64 {
	if x != nil {
		return x.IsPostage
	}
	return 0
}

func (x *NewProductList) GetBrowse() int64 {
	if x != nil {
		return x.Browse
	}
	return 0
}

func (x *NewProductList) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

// todo:添加购物车
type AddToCartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ProductId     int64                  `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	Num           int64                  `protobuf:"varint,3,opt,name=Num,proto3" json:"Num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddToCartRequest) Reset() {
	*x = AddToCartRequest{}
	mi := &file_product_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddToCartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToCartRequest) ProtoMessage() {}

func (x *AddToCartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToCartRequest.ProtoReflect.Descriptor instead.
func (*AddToCartRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{12}
}

func (x *AddToCartRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddToCartRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AddToCartRequest) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type AddToCartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddToCartResponse) Reset() {
	*x = AddToCartResponse{}
	mi := &file_product_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddToCartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToCartResponse) ProtoMessage() {}

func (x *AddToCartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToCartResponse.ProtoReflect.Descriptor instead.
func (*AddToCartResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{13}
}

func (x *AddToCartResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 商家发布商品
type AddProductRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MerId         int64                  `protobuf:"varint,1,opt,name=MerId,proto3" json:"MerId,omitempty"`
	Image         string                 `protobuf:"bytes,2,opt,name=Image,proto3" json:"Image,omitempty"`
	StoreName     string                 `protobuf:"bytes,3,opt,name=StoreName,proto3" json:"StoreName,omitempty"`
	StoreInfo     string                 `protobuf:"bytes,4,opt,name=StoreInfo,proto3" json:"StoreInfo,omitempty"`
	Keyword       string                 `protobuf:"bytes,5,opt,name=Keyword,proto3" json:"Keyword,omitempty"`
	CateId        string                 `protobuf:"bytes,6,opt,name=CateId,proto3" json:"CateId,omitempty"`
	Price         float32                `protobuf:"fixed32,7,opt,name=Price,proto3" json:"Price,omitempty"`
	VipPrice      float32                `protobuf:"fixed32,8,opt,name=VipPrice,proto3" json:"VipPrice,omitempty"`
	OtPrice       float32                `protobuf:"fixed32,9,opt,name=OtPrice,proto3" json:"OtPrice,omitempty"`
	Cost          float32                `protobuf:"fixed32,10,opt,name=Cost,proto3" json:"Cost,omitempty"`
	Stock         int64                  `protobuf:"varint,11,opt,name=Stock,proto3" json:"Stock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddProductRequest) Reset() {
	*x = AddProductRequest{}
	mi := &file_product_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductRequest) ProtoMessage() {}

func (x *AddProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductRequest.ProtoReflect.Descriptor instead.
func (*AddProductRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{14}
}

func (x *AddProductRequest) GetMerId() int64 {
	if x != nil {
		return x.MerId
	}
	return 0
}

func (x *AddProductRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *AddProductRequest) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *AddProductRequest) GetStoreInfo() string {
	if x != nil {
		return x.StoreInfo
	}
	return ""
}

func (x *AddProductRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *AddProductRequest) GetCateId() string {
	if x != nil {
		return x.CateId
	}
	return ""
}

func (x *AddProductRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AddProductRequest) GetVipPrice() float32 {
	if x != nil {
		return x.VipPrice
	}
	return 0
}

func (x *AddProductRequest) GetOtPrice() float32 {
	if x != nil {
		return x.OtPrice
	}
	return 0
}

func (x *AddProductRequest) GetCost() float32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *AddProductRequest) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

type AddProductResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     int64                  `protobuf:"varint,1,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddProductResponse) Reset() {
	*x = AddProductResponse{}
	mi := &file_product_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductResponse) ProtoMessage() {}

func (x *AddProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductResponse.ProtoReflect.Descriptor instead.
func (*AddProductResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{15}
}

func (x *AddProductResponse) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type CreateBargainProductRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProductId       int64                  `protobuf:"varint,1,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	Title           string                 `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Stock           int64                  `protobuf:"varint,3,opt,name=Stock,proto3" json:"Stock,omitempty"`
	StartTime       string                 `protobuf:"bytes,4,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	StopTime        string                 `protobuf:"bytes,5,opt,name=StopTime,proto3" json:"StopTime,omitempty"`
	MinPrice        float32                `protobuf:"fixed32,6,opt,name=MinPrice,proto3" json:"MinPrice,omitempty"`
	BargainMaxPrice int64                  `protobuf:"varint,7,opt,name=BargainMaxPrice,proto3" json:"BargainMaxPrice,omitempty"`
	BargainMinPrice int64                  `protobuf:"varint,8,opt,name=BargainMinPrice,proto3" json:"BargainMinPrice,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateBargainProductRequest) Reset() {
	*x = CreateBargainProductRequest{}
	mi := &file_product_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBargainProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBargainProductRequest) ProtoMessage() {}

func (x *CreateBargainProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBargainProductRequest.ProtoReflect.Descriptor instead.
func (*CreateBargainProductRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{16}
}

func (x *CreateBargainProductRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CreateBargainProductRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateBargainProductRequest) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *CreateBargainProductRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *CreateBargainProductRequest) GetStopTime() string {
	if x != nil {
		return x.StopTime
	}
	return ""
}

func (x *CreateBargainProductRequest) GetMinPrice() float32 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *CreateBargainProductRequest) GetBargainMaxPrice() int64 {
	if x != nil {
		return x.BargainMaxPrice
	}
	return 0
}

func (x *CreateBargainProductRequest) GetBargainMinPrice() int64 {
	if x != nil {
		return x.BargainMinPrice
	}
	return 0
}

type CreateBargainProductResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        int64                  `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBargainProductResponse) Reset() {
	*x = CreateBargainProductResponse{}
	mi := &file_product_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBargainProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBargainProductResponse) ProtoMessage() {}

func (x *CreateBargainProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBargainProductResponse.ProtoReflect.Descriptor instead.
func (*CreateBargainProductResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{17}
}

func (x *CreateBargainProductResponse) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

// todo:商家删除商品
type MerchantDeleteProRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MerId         int64                  `protobuf:"varint,1,opt,name=MerId,proto3" json:"MerId,omitempty"`
	ProductId     int64                  `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerchantDeleteProRequest) Reset() {
	*x = MerchantDeleteProRequest{}
	mi := &file_product_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerchantDeleteProRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantDeleteProRequest) ProtoMessage() {}

func (x *MerchantDeleteProRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantDeleteProRequest.ProtoReflect.Descriptor instead.
func (*MerchantDeleteProRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{18}
}

func (x *MerchantDeleteProRequest) GetMerId() int64 {
	if x != nil {
		return x.MerId
	}
	return 0
}

func (x *MerchantDeleteProRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type MerchantDeleteProResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerchantDeleteProResponse) Reset() {
	*x = MerchantDeleteProResponse{}
	mi := &file_product_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerchantDeleteProResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantDeleteProResponse) ProtoMessage() {}

func (x *MerchantDeleteProResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantDeleteProResponse.ProtoReflect.Descriptor instead.
func (*MerchantDeleteProResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{19}
}

func (x *MerchantDeleteProResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateBargainUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           int64                  `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	BargainId     int64                  `protobuf:"varint,2,opt,name=BargainId,proto3" json:"BargainId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBargainUserRequest) Reset() {
	*x = CreateBargainUserRequest{}
	mi := &file_product_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBargainUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBargainUserRequest) ProtoMessage() {}

func (x *CreateBargainUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBargainUserRequest.ProtoReflect.Descriptor instead.
func (*CreateBargainUserRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{20}
}

func (x *CreateBargainUserRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CreateBargainUserRequest) GetBargainId() int64 {
	if x != nil {
		return x.BargainId
	}
	return 0
}

type CreateBargainUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        int64                  `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
<<<<<<< HEAD
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
=======
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBargainUserResponse) Reset() {
	*x = CreateBargainUserResponse{}
	mi := &file_product_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBargainUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBargainUserResponse) ProtoMessage() {}

func (x *CreateBargainUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBargainUserResponse.ProtoReflect.Descriptor instead.
func (*CreateBargainUserResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{21}
}

func (x *CreateBargainUserResponse) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *CreateBargainUserResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// todo: 计算购物车中商品的总价
type CartTotalPriceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartTotalPriceRequest) Reset() {
	*x = CartTotalPriceRequest{}
	mi := &file_product_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartTotalPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartTotalPriceRequest) ProtoMessage() {}

func (x *CartTotalPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartTotalPriceRequest.ProtoReflect.Descriptor instead.
func (*CartTotalPriceRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{22}
}

func (x *CartTotalPriceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CartTotalPriceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalPrice    float32                `protobuf:"fixed32,1,opt,name=TotalPrice,proto3" json:"TotalPrice,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartTotalPriceResponse) Reset() {
	*x = CartTotalPriceResponse{}
	mi := &file_product_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartTotalPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartTotalPriceResponse) ProtoMessage() {}

func (x *CartTotalPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartTotalPriceResponse.ProtoReflect.Descriptor instead.
func (*CartTotalPriceResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{23}
}

func (x *CartTotalPriceResponse) GetTotalPrice() float32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

// todo 添加拼团商品
type AddGroupProductRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MerId         int64                  `protobuf:"varint,1,opt,name=MerId,proto3" json:"MerId,omitempty"`
	ProductId     int64                  `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Attr          string                 `protobuf:"bytes,4,opt,name=Attr,proto3" json:"Attr,omitempty"`
	People        int64                  `protobuf:"varint,5,opt,name=People,proto3" json:"People,omitempty"`
	Info          string                 `protobuf:"bytes,6,opt,name=Info,proto3" json:"Info,omitempty"`
	Price         float32                `protobuf:"fixed32,7,opt,name=Price,proto3" json:"Price,omitempty"`
	Sort          int64                  `protobuf:"varint,8,opt,name=Sort,proto3" json:"Sort,omitempty"`
	Sales         int64                  `protobuf:"varint,9,opt,name=Sales,proto3" json:"Sales,omitempty"`
	Stock         int64                  `protobuf:"varint,10,opt,name=Stock,proto3" json:"Stock,omitempty"`
	StartTime     string                 `protobuf:"bytes,11,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	StopTime      string                 `protobuf:"bytes,12,opt,name=StopTime,proto3" json:"StopTime,omitempty"`
	Cost          int64                  `protobuf:"varint,13,opt,name=Cost,proto3" json:"Cost,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddGroupProductRequest) Reset() {
	*x = AddGroupProductRequest{}
	mi := &file_product_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGroupProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupProductRequest) ProtoMessage() {}

func (x *AddGroupProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupProductRequest.ProtoReflect.Descriptor instead.
func (*AddGroupProductRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{24}
}

func (x *AddGroupProductRequest) GetMerId() int64 {
	if x != nil {
		return x.MerId
	}
	return 0
}

func (x *AddGroupProductRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AddGroupProductRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddGroupProductRequest) GetAttr() string {
	if x != nil {
		return x.Attr
	}
	return ""
}

func (x *AddGroupProductRequest) GetPeople() int64 {
	if x != nil {
		return x.People
	}
	return 0
}

func (x *AddGroupProductRequest) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *AddGroupProductRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AddGroupProductRequest) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddGroupProductRequest) GetSales() int64 {
	if x != nil {
		return x.Sales
	}
	return 0
}

func (x *AddGroupProductRequest) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *AddGroupProductRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AddGroupProductRequest) GetStopTime() string {
	if x != nil {
		return x.StopTime
	}
	return ""
}

func (x *AddGroupProductRequest) GetCost() int64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

type AddGroupProductResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GProductId    int64                  `protobuf:"varint,1,opt,name=GProductId,proto3" json:"GProductId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddGroupProductResponse) Reset() {
	*x = AddGroupProductResponse{}
	mi := &file_product_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGroupProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupProductResponse) ProtoMessage() {}

func (x *AddGroupProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupProductResponse.ProtoReflect.Descriptor instead.
func (*AddGroupProductResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{25}
}

func (x *AddGroupProductResponse) GetGProductId() int64 {
	if x != nil {
		return x.GProductId
	}
	return 0
}

type CreateBargainUserHelpRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	BargainId     uint32                 `protobuf:"varint,2,opt,name=BargainId,proto3" json:"BargainId,omitempty"`
	BargainUserId uint32                 `protobuf:"varint,3,opt,name=BargainUserId,proto3" json:"BargainUserId,omitempty"`
<<<<<<< HEAD
	InviteCode    string                 `protobuf:"bytes,4,opt,name=InviteCode,proto3" json:"InviteCode,omitempty"`
=======
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBargainUserHelpRequest) Reset() {
	*x = CreateBargainUserHelpRequest{}
	mi := &file_product_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBargainUserHelpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBargainUserHelpRequest) ProtoMessage() {}

func (x *CreateBargainUserHelpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBargainUserHelpRequest.ProtoReflect.Descriptor instead.
func (*CreateBargainUserHelpRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{26}
}

func (x *CreateBargainUserHelpRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CreateBargainUserHelpRequest) GetBargainId() uint32 {
	if x != nil {
		return x.BargainId
	}
	return 0
}

func (x *CreateBargainUserHelpRequest) GetBargainUserId() uint32 {
	if x != nil {
		return x.BargainUserId
	}
	return 0
}

<<<<<<< HEAD
func (x *CreateBargainUserHelpRequest) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

type CreateBargainUserHelpResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        int64                  `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
=======
type CreateBargainUserHelpResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        int64                  `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBargainUserHelpResponse) Reset() {
	*x = CreateBargainUserHelpResponse{}
	mi := &file_product_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBargainUserHelpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBargainUserHelpResponse) ProtoMessage() {}

func (x *CreateBargainUserHelpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBargainUserHelpResponse.ProtoReflect.Descriptor instead.
func (*CreateBargainUserHelpResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{27}
}

func (x *CreateBargainUserHelpResponse) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *CreateBargainUserHelpResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// todo 商家删除拼团商品
type RemoveGroupProductRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MerId         int64                  `protobuf:"varint,1,opt,name=MerId,proto3" json:"MerId,omitempty"`
	ProductId     int64                  `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveGroupProductRequest) Reset() {
	*x = RemoveGroupProductRequest{}
	mi := &file_product_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveGroupProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupProductRequest) ProtoMessage() {}

func (x *RemoveGroupProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupProductRequest.ProtoReflect.Descriptor instead.
func (*RemoveGroupProductRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{28}
}

func (x *RemoveGroupProductRequest) GetMerId() int64 {
	if x != nil {
		return x.MerId
	}
	return 0
}

func (x *RemoveGroupProductRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type RemoveGroupProductResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveGroupProductResponse) Reset() {
	*x = RemoveGroupProductResponse{}
	mi := &file_product_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveGroupProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupProductResponse) ProtoMessage() {}

func (x *RemoveGroupProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupProductResponse.ProtoReflect.Descriptor instead.
func (*RemoveGroupProductResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{29}
}

func (x *RemoveGroupProductResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// todo:用户发起拼团
type CreateUserGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           int64                  `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Cid           int64                  `protobuf:"varint,2,opt,name=Cid,proto3" json:"Cid,omitempty"`
	Num           int64                  `protobuf:"varint,3,opt,name=Num,proto3" json:"Num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserGroupRequest) Reset() {
	*x = CreateUserGroupRequest{}
	mi := &file_product_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserGroupRequest) ProtoMessage() {}

func (x *CreateUserGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateUserGroupRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{30}
}

func (x *CreateUserGroupRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CreateUserGroupRequest) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *CreateUserGroupRequest) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type CreateUserGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UGroupId      int64                  `protobuf:"varint,1,opt,name=UGroupId,proto3" json:"UGroupId,omitempty"`
	InviteCode    string                 `protobuf:"bytes,2,opt,name=InviteCode,proto3" json:"InviteCode,omitempty"`
	NowPeopleNum  int64                  `protobuf:"varint,3,opt,name=NowPeopleNum,proto3" json:"NowPeopleNum,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=Status,proto3" json:"Status,omitempty"`
	Url           string                 `protobuf:"bytes,5,opt,name=Url,proto3" json:"Url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserGroupResponse) Reset() {
	*x = CreateUserGroupResponse{}
	mi := &file_product_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserGroupResponse) ProtoMessage() {}

func (x *CreateUserGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateUserGroupResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{31}
}

func (x *CreateUserGroupResponse) GetUGroupId() int64 {
	if x != nil {
		return x.UGroupId
	}
	return 0
}

func (x *CreateUserGroupResponse) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

func (x *CreateUserGroupResponse) GetNowPeopleNum() int64 {
	if x != nil {
		return x.NowPeopleNum
	}
	return 0
}

func (x *CreateUserGroupResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateUserGroupResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// todo:商品列表展示
type ProductListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductListRequest) Reset() {
	*x = ProductListRequest{}
	mi := &file_product_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListRequest) ProtoMessage() {}

func (x *ProductListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListRequest.ProtoReflect.Descriptor instead.
func (*ProductListRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{32}
}

type ProductListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*ProductItem         `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductListResponse) Reset() {
	*x = ProductListResponse{}
	mi := &file_product_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListResponse) ProtoMessage() {}

func (x *ProductListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListResponse.ProtoReflect.Descriptor instead.
func (*ProductListResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{33}
}

func (x *ProductListResponse) GetList() []*ProductItem {
	if x != nil {
		return x.List
	}
	return nil
}

type ProductItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreName     string                 `protobuf:"bytes,1,opt,name=StoreName,proto3" json:"StoreName,omitempty"`
	StoreInfo     string                 `protobuf:"bytes,2,opt,name=StoreInfo,proto3" json:"StoreInfo,omitempty"`
	CateId        string                 `protobuf:"bytes,3,opt,name=CateId,proto3" json:"CateId,omitempty"`
	Price         float32                `protobuf:"fixed32,4,opt,name=Price,proto3" json:"Price,omitempty"`
	Sales         int64                  `protobuf:"varint,5,opt,name=Sales,proto3" json:"Sales,omitempty"`
	Browse        int64                  `protobuf:"varint,6,opt,name=Browse,proto3" json:"Browse,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductItem) Reset() {
	*x = ProductItem{}
	mi := &file_product_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductItem) ProtoMessage() {}

func (x *ProductItem) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductItem.ProtoReflect.Descriptor instead.
func (*ProductItem) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{34}
}

func (x *ProductItem) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *ProductItem) GetStoreInfo() string {
	if x != nil {
		return x.StoreInfo
	}
	return ""
}

func (x *ProductItem) GetCateId() string {
	if x != nil {
		return x.CateId
	}
	return ""
}

func (x *ProductItem) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductItem) GetSales() int64 {
	if x != nil {
		return x.Sales
	}
	return 0
}

func (x *ProductItem) GetBrowse() int64 {
	if x != nil {
		return x.Browse
	}
	return 0
}

// TODO:添加优惠卷
type AddCouponRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Integral      int64                  `protobuf:"varint,2,opt,name=Integral,proto3" json:"Integral,omitempty"`
	CouponPrice   float32                `protobuf:"fixed32,3,opt,name=CouponPrice,proto3" json:"CouponPrice,omitempty"`
	UseMinPrice   float32                `protobuf:"fixed32,4,opt,name=UseMinPrice,proto3" json:"UseMinPrice,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCouponRequest) Reset() {
	*x = AddCouponRequest{}
	mi := &file_product_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCouponRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCouponRequest) ProtoMessage() {}

func (x *AddCouponRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCouponRequest.ProtoReflect.Descriptor instead.
func (*AddCouponRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{35}
}

func (x *AddCouponRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddCouponRequest) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *AddCouponRequest) GetCouponPrice() float32 {
	if x != nil {
		return x.CouponPrice
	}
	return 0
}

func (x *AddCouponRequest) GetUseMinPrice() float32 {
	if x != nil {
		return x.UseMinPrice
	}
	return 0
}

type AddCouponResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CouponId      int64                  `protobuf:"varint,1,opt,name=CouponId,proto3" json:"CouponId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCouponResponse) Reset() {
	*x = AddCouponResponse{}
	mi := &file_product_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCouponResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCouponResponse) ProtoMessage() {}

func (x *AddCouponResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCouponResponse.ProtoReflect.Descriptor instead.
func (*AddCouponResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{36}
}

func (x *AddCouponResponse) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

// TODO:前台商家添加优惠卷
type MerAddCouponStoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MerId         int64                  `protobuf:"varint,1,opt,name=MerId,proto3" json:"MerId,omitempty"`
	Cid           int64                  `protobuf:"varint,2,opt,name=Cid,proto3" json:"Cid,omitempty"`
	StartTime     string                 `protobuf:"bytes,3,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	StopTime      string                 `protobuf:"bytes,4,opt,name=StopTime,proto3" json:"StopTime,omitempty"`
	Num           int64                  `protobuf:"varint,5,opt,name=Num,proto3" json:"Num,omitempty"`
	FullReduction float32                `protobuf:"fixed32,6,opt,name=FullReduction,proto3" json:"FullReduction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerAddCouponStoreRequest) Reset() {
	*x = MerAddCouponStoreRequest{}
	mi := &file_product_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerAddCouponStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerAddCouponStoreRequest) ProtoMessage() {}

func (x *MerAddCouponStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerAddCouponStoreRequest.ProtoReflect.Descriptor instead.
func (*MerAddCouponStoreRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{37}
}

func (x *MerAddCouponStoreRequest) GetMerId() int64 {
	if x != nil {
		return x.MerId
	}
	return 0
}

func (x *MerAddCouponStoreRequest) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *MerAddCouponStoreRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *MerAddCouponStoreRequest) GetStopTime() string {
	if x != nil {
		return x.StopTime
	}
	return ""
}

func (x *MerAddCouponStoreRequest) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *MerAddCouponStoreRequest) GetFullReduction() float32 {
	if x != nil {
		return x.FullReduction
	}
	return 0
}

type MerAddCouponStoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        int64                  `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerAddCouponStoreResponse) Reset() {
	*x = MerAddCouponStoreResponse{}
	mi := &file_product_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerAddCouponStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerAddCouponStoreResponse) ProtoMessage() {}

func (x *MerAddCouponStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerAddCouponStoreResponse.ProtoReflect.Descriptor instead.
func (*MerAddCouponStoreResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{38}
}

func (x *MerAddCouponStoreResponse) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

// TODO: 商家删除优惠卷
type MerDeleteCouponStoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MerId         int64                  `protobuf:"varint,1,opt,name=MerId,proto3" json:"MerId,omitempty"`
	Cid           int64                  `protobuf:"varint,2,opt,name=Cid,proto3" json:"Cid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerDeleteCouponStoreRequest) Reset() {
	*x = MerDeleteCouponStoreRequest{}
	mi := &file_product_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerDeleteCouponStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerDeleteCouponStoreRequest) ProtoMessage() {}

func (x *MerDeleteCouponStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerDeleteCouponStoreRequest.ProtoReflect.Descriptor instead.
func (*MerDeleteCouponStoreRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{39}
}

func (x *MerDeleteCouponStoreRequest) GetMerId() int64 {
	if x != nil {
		return x.MerId
	}
	return 0
}

func (x *MerDeleteCouponStoreRequest) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

type MerDeleteCouponStoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerDeleteCouponStoreResponse) Reset() {
	*x = MerDeleteCouponStoreResponse{}
	mi := &file_product_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerDeleteCouponStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerDeleteCouponStoreResponse) ProtoMessage() {}

func (x *MerDeleteCouponStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerDeleteCouponStoreResponse.ProtoReflect.Descriptor instead.
func (*MerDeleteCouponStoreResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{40}
}

func (x *MerDeleteCouponStoreResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddSpikeProductRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     int64                  `protobuf:"varint,1,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	SpikePrice    float32                `protobuf:"fixed32,2,opt,name=SpikePrice,proto3" json:"SpikePrice,omitempty"`
	SpikeStock    int64                  `protobuf:"varint,3,opt,name=SpikeStock,proto3" json:"SpikeStock,omitempty"`
	StartTime     string                 `protobuf:"bytes,4,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime       string                 `protobuf:"bytes,5,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSpikeProductRequest) Reset() {
	*x = AddSpikeProductRequest{}
	mi := &file_product_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSpikeProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSpikeProductRequest) ProtoMessage() {}

func (x *AddSpikeProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSpikeProductRequest.ProtoReflect.Descriptor instead.
func (*AddSpikeProductRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{41}
}

func (x *AddSpikeProductRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AddSpikeProductRequest) GetSpikePrice() float32 {
	if x != nil {
		return x.SpikePrice
	}
	return 0
}

func (x *AddSpikeProductRequest) GetSpikeStock() int64 {
	if x != nil {
		return x.SpikeStock
	}
	return 0
}

func (x *AddSpikeProductRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AddSpikeProductRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type AddSpikeProductResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     int64                  `protobuf:"varint,1,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSpikeProductResponse) Reset() {
	*x = AddSpikeProductResponse{}
	mi := &file_product_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSpikeProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSpikeProductResponse) ProtoMessage() {}

func (x *AddSpikeProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSpikeProductResponse.ProtoReflect.Descriptor instead.
func (*AddSpikeProductResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{42}
}

func (x *AddSpikeProductResponse) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

// todo:秒杀中
type FlashSaleRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SpikeProductsId int64                  `protobuf:"varint,1,opt,name=SpikeProductsId,proto3" json:"SpikeProductsId,omitempty"` //todo: 秒杀商品Id
	UserId          int64                  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`                   //todo: 用户Id
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FlashSaleRequest) Reset() {
	*x = FlashSaleRequest{}
	mi := &file_product_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlashSaleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlashSaleRequest) ProtoMessage() {}

func (x *FlashSaleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlashSaleRequest.ProtoReflect.Descriptor instead.
func (*FlashSaleRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{43}
}

func (x *FlashSaleRequest) GetSpikeProductsId() int64 {
	if x != nil {
		return x.SpikeProductsId
	}
	return 0
}

func (x *FlashSaleRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type FlashSaleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       string                 `protobuf:"bytes,1,opt,name=Success,proto3" json:"Success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlashSaleResponse) Reset() {
	*x = FlashSaleResponse{}
	mi := &file_product_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlashSaleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlashSaleResponse) ProtoMessage() {}

func (x *FlashSaleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlashSaleResponse.ProtoReflect.Descriptor instead.
func (*FlashSaleResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{44}
}

func (x *FlashSaleResponse) GetSuccess() string {
	if x != nil {
		return x.Success
	}
	return ""
}

// todo:用户加入拼团
type UserJoinGroupRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Uid            int64                  `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Cid            int64                  `protobuf:"varint,2,opt,name=Cid,proto3" json:"Cid,omitempty"`
	Num            int64                  `protobuf:"varint,3,opt,name=Num,proto3" json:"Num,omitempty"`
	InvitationCode string                 `protobuf:"bytes,4,opt,name=InvitationCode,proto3" json:"InvitationCode,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UserJoinGroupRequest) Reset() {
	*x = UserJoinGroupRequest{}
	mi := &file_product_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserJoinGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserJoinGroupRequest) ProtoMessage() {}

func (x *UserJoinGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserJoinGroupRequest.ProtoReflect.Descriptor instead.
func (*UserJoinGroupRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{45}
}

func (x *UserJoinGroupRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserJoinGroupRequest) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *UserJoinGroupRequest) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *UserJoinGroupRequest) GetInvitationCode() string {
	if x != nil {
		return x.InvitationCode
	}
	return ""
}

type UserJoinGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UGroupId      int64                  `protobuf:"varint,1,opt,name=UGroupId,proto3" json:"UGroupId,omitempty"`
	ProductName   string                 `protobuf:"bytes,2,opt,name=ProductName,proto3" json:"ProductName,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=Status,proto3" json:"Status,omitempty"`
	Url           string                 `protobuf:"bytes,4,opt,name=Url,proto3" json:"Url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserJoinGroupResponse) Reset() {
	*x = UserJoinGroupResponse{}
	mi := &file_product_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserJoinGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserJoinGroupResponse) ProtoMessage() {}

func (x *UserJoinGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserJoinGroupResponse.ProtoReflect.Descriptor instead.
func (*UserJoinGroupResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{46}
}

func (x *UserJoinGroupResponse) GetUGroupId() int64 {
	if x != nil {
		return x.UGroupId
	}
	return 0
}

func (x *UserJoinGroupResponse) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *UserJoinGroupResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserJoinGroupResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

<<<<<<< HEAD
// todo:将商品信息写入ES
type ProductCreateToESRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Table         string                 `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
=======
// TODO: 添加购物车
type AddCartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ProductId     int64                  `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	Num           int64                  `protobuf:"varint,3,opt,name=Num,proto3" json:"Num,omitempty"`
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

<<<<<<< HEAD
func (x *ProductCreateToESRequest) Reset() {
	*x = ProductCreateToESRequest{}
=======
func (x *AddCartRequest) Reset() {
	*x = AddCartRequest{}
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
	mi := &file_product_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

<<<<<<< HEAD
func (x *ProductCreateToESRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCreateToESRequest) ProtoMessage() {}

func (x *ProductCreateToESRequest) ProtoReflect() protoreflect.Message {
=======
func (x *AddCartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCartRequest) ProtoMessage() {}

func (x *AddCartRequest) ProtoReflect() protoreflect.Message {
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
	mi := &file_product_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

<<<<<<< HEAD
// Deprecated: Use ProductCreateToESRequest.ProtoReflect.Descriptor instead.
func (*ProductCreateToESRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{47}
}

func (x *ProductCreateToESRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

type ProductCreateToESResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
=======
// Deprecated: Use AddCartRequest.ProtoReflect.Descriptor instead.
func (*AddCartRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{47}
}

func (x *AddCartRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddCartRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AddCartRequest) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type AddCartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       string                 `protobuf:"bytes,1,opt,name=Success,proto3" json:"Success,omitempty"`
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

<<<<<<< HEAD
func (x *ProductCreateToESResponse) Reset() {
	*x = ProductCreateToESResponse{}
=======
func (x *AddCartResponse) Reset() {
	*x = AddCartResponse{}
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
	mi := &file_product_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

<<<<<<< HEAD
func (x *ProductCreateToESResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCreateToESResponse) ProtoMessage() {}

func (x *ProductCreateToESResponse) ProtoReflect() protoreflect.Message {
=======
func (x *AddCartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCartResponse) ProtoMessage() {}

func (x *AddCartResponse) ProtoReflect() protoreflect.Message {
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
	mi := &file_product_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

<<<<<<< HEAD
// Deprecated: Use ProductCreateToESResponse.ProtoReflect.Descriptor instead.
func (*ProductCreateToESResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{48}
}

func (x *ProductCreateToESResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// todo:查询ES中的商品信息
type ProductSearchESRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductSearchESRequest) Reset() {
	*x = ProductSearchESRequest{}
	mi := &file_product_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductSearchESRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSearchESRequest) ProtoMessage() {}

func (x *ProductSearchESRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSearchESRequest.ProtoReflect.Descriptor instead.
func (*ProductSearchESRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{49}
}

func (x *ProductSearchESRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ProductSearchESResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*NewProductList      `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
=======
// Deprecated: Use AddCartResponse.ProtoReflect.Descriptor instead.
func (*AddCartResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{48}
}

func (x *AddCartResponse) GetSuccess() string {
	if x != nil {
		return x.Success
	}
	return ""
}

// todo: 从购物车中移除某个商品
type RemoveFromCartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ProductId     int64                  `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	CartId        string                 `protobuf:"bytes,3,opt,name=CartId,proto3" json:"CartId,omitempty"`
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

<<<<<<< HEAD
func (x *ProductSearchESResponse) Reset() {
	*x = ProductSearchESResponse{}
=======
func (x *RemoveFromCartRequest) Reset() {
	*x = RemoveFromCartRequest{}
	mi := &file_product_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFromCartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromCartRequest) ProtoMessage() {}

func (x *RemoveFromCartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromCartRequest.ProtoReflect.Descriptor instead.
func (*RemoveFromCartRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{49}
}

func (x *RemoveFromCartRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RemoveFromCartRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *RemoveFromCartRequest) GetCartId() string {
	if x != nil {
		return x.CartId
	}
	return ""
}

type RemoveFromCartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       string                 `protobuf:"bytes,1,opt,name=Success,proto3" json:"Success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFromCartResponse) Reset() {
	*x = RemoveFromCartResponse{}
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
	mi := &file_product_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

<<<<<<< HEAD
func (x *ProductSearchESResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSearchESResponse) ProtoMessage() {}

func (x *ProductSearchESResponse) ProtoReflect() protoreflect.Message {
=======
func (x *RemoveFromCartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromCartResponse) ProtoMessage() {}

func (x *RemoveFromCartResponse) ProtoReflect() protoreflect.Message {
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
	mi := &file_product_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

<<<<<<< HEAD
// Deprecated: Use ProductSearchESResponse.ProtoReflect.Descriptor instead.
func (*ProductSearchESResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{50}
}

func (x *ProductSearchESResponse) GetList() []*NewProductList {
=======
// Deprecated: Use RemoveFromCartResponse.ProtoReflect.Descriptor instead.
func (*RemoveFromCartResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{50}
}

func (x *RemoveFromCartResponse) GetSuccess() string {
	if x != nil {
		return x.Success
	}
	return ""
}

// todo: 修改购物车中某个商品的数量
type UpdateCartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ProductId     int64                  `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	Num           int64                  `protobuf:"varint,3,opt,name=Num,proto3" json:"Num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCartRequest) Reset() {
	*x = UpdateCartRequest{}
	mi := &file_product_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCartRequest) ProtoMessage() {}

func (x *UpdateCartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCartRequest.ProtoReflect.Descriptor instead.
func (*UpdateCartRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{51}
}

func (x *UpdateCartRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateCartRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *UpdateCartRequest) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type UpdateCartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       string                 `protobuf:"bytes,1,opt,name=Success,proto3" json:"Success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCartResponse) Reset() {
	*x = UpdateCartResponse{}
	mi := &file_product_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCartResponse) ProtoMessage() {}

func (x *UpdateCartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCartResponse.ProtoReflect.Descriptor instead.
func (*UpdateCartResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{52}
}

func (x *UpdateCartResponse) GetSuccess() string {
	if x != nil {
		return x.Success
	}
	return ""
}

// todo: 清空购物车
type ClearCartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearCartRequest) Reset() {
	*x = ClearCartRequest{}
	mi := &file_product_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearCartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearCartRequest) ProtoMessage() {}

func (x *ClearCartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearCartRequest.ProtoReflect.Descriptor instead.
func (*ClearCartRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{53}
}

func (x *ClearCartRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ClearCartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       string                 `protobuf:"bytes,1,opt,name=Success,proto3" json:"Success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearCartResponse) Reset() {
	*x = ClearCartResponse{}
	mi := &file_product_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearCartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearCartResponse) ProtoMessage() {}

func (x *ClearCartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearCartResponse.ProtoReflect.Descriptor instead.
func (*ClearCartResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{54}
}

func (x *ClearCartResponse) GetSuccess() string {
	if x != nil {
		return x.Success
	}
	return ""
}

// todo:购物车中商品列表
type CartProductListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartProductListRequest) Reset() {
	*x = CartProductListRequest{}
	mi := &file_product_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartProductListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartProductListRequest) ProtoMessage() {}

func (x *CartProductListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartProductListRequest.ProtoReflect.Descriptor instead.
func (*CartProductListRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{55}
}

func (x *CartProductListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CartProductListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*ProductItems        `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartProductListResponse) Reset() {
	*x = CartProductListResponse{}
	mi := &file_product_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartProductListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartProductListResponse) ProtoMessage() {}

func (x *CartProductListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartProductListResponse.ProtoReflect.Descriptor instead.
func (*CartProductListResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{56}
}

func (x *CartProductListResponse) GetList() []*ProductItems {
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
	if x != nil {
		return x.List
	}
	return nil
}

<<<<<<< HEAD
var File_product_proto protoreflect.FileDescriptor

const file_product_proto_rawDesc = "" +
	"\n" +
	"\rproduct.proto\x12\aproduct\"1\n" +
	"\x15ProductKeywordRequest\x12\x18\n" +
	"\aKeyword\x18\x01 \x01(\tR\aKeyword\"E\n" +
	"\x16ProductKeywordResponse\x12+\n" +
	"\x04list\x18\x01 \x03(\v2\x17.product.NewProductListR\x04list\"\x19\n" +
	"\x17ProductRecommendRequest\"G\n" +
	"\x18ProductRecommendResponse\x12+\n" +
	"\x04list\x18\x01 \x03(\v2\x17.product.NewProductListR\x04list\"2\n" +
	"\x12ProductInfoRequest\x12\x1c\n" +
	"\tStoreName\x18\x01 \x01(\tR\tStoreName\"?\n" +
	"\x13ProductInfoResponse\x12(\n" +
	"\x04list\x18\x01 \x03(\v2\x14.product.ProductListR\x04list\"\x8d\x03\n" +
	"\vProductList\x12\x0e\n" +
	"\x02Id\x18\x01 \x01(\x03R\x02Id\x12\x14\n" +
	"\x05MerId\x18\x02 \x01(\x03R\x05MerId\x12\x1c\n" +
	"\tStoreName\x18\x03 \x01(\tR\tStoreName\x12\x1c\n" +
	"\tStoreInfo\x18\x04 \x01(\tR\tStoreInfo\x12\x16\n" +
	"\x06CateId\x18\x05 \x01(\tR\x06CateId\x12\x14\n" +
	"\x05Price\x18\x06 \x01(\x02R\x05Price\x12\x14\n" +
	"\x05Sales\x18\a \x01(\x03R\x05Sales\x12\x14\n" +
	"\x05Stock\x18\b \x01(\x03R\x05Stock\x12\x16\n" +
	"\x06IsShow\x18\t \x01(\x03R\x06IsShow\x12\x12\n" +
	"\x04Cost\x18\n" +
	" \x01(\x02R\x04Cost\x12\x16\n" +
	"\x06IsGood\x18\v \x01(\x03R\x06IsGood\x12\x16\n" +
	"\x06Browse\x18\f \x01(\x03R\x06Browse\x12$\n" +
	"\rProductSortId\x18\r \x01(\x03R\rProductSortId\x12\x10\n" +
	"\x03Pid\x18\x0e \x01(\x03R\x03Pid\x12\x1a\n" +
	"\bCateName\x18\x0f \x01(\tR\bCateName\x12\x12\n" +
	"\x04Sort\x18\x10 \x01(\x03R\x04Sort\"0\n" +
	"\x16ProductCategoryRequest\x12\x16\n" +
	"\x06cateId\x18\x01 \x01(\tR\x06cateId\"C\n" +
	"\x17ProductCategoryResponse\x12(\n" +
	"\x04list\x18\x01 \x03(\v2\x14.product.ProductListR\x04list\"\xd0\x02\n" +
	"\x14ProductFilterRequest\x12\x1b\n" +
	"\tmin_price\x18\x01 \x01(\x01R\bminPrice\x12\x1b\n" +
	"\tmax_price\x18\x02 \x01(\x01R\bmaxPrice\x12\x17\n" +
	"\acate_id\x18\x03 \x01(\tR\x06cateId\x12\x14\n" +
	"\x05sales\x18\x04 \x01(\x03R\x05sales\x12\x17\n" +
	"\ais_show\x18\x05 \x01(\x03R\x06isShow\x12\x15\n" +
	"\x06is_hot\x18\x06 \x01(\x03R\x05isHot\x12\x1d\n" +
	"\n" +
	"is_benefit\x18\a \x01(\x03R\tisBenefit\x12\x17\n" +
	"\ais_best\x18\b \x01(\x03R\x06isBest\x12\x15\n" +
	"\x06is_new\x18\t \x01(\x03R\x05isNew\x12\x1d\n" +
	"\n" +
	"is_seckill\x18\n" +
	" \x01(\x03R\tisSeckill\x12\x1d\n" +
	"\n" +
	"is_bargain\x18\v \x01(\x03R\tisBargain\x12\x12\n" +
	"\x04name\x18\f \x01(\tR\x04name\"D\n" +
	"\x15ProductFilterResponse\x12+\n" +
	"\x04list\x18\x01 \x03(\v2\x17.product.NewProductListR\x04list\"\xbe\x02\n" +
	"\x0eNewProductList\x12\x14\n" +
	"\x05MerId\x18\x01 \x01(\x03R\x05MerId\x12\x14\n" +
	"\x05Image\x18\x02 \x01(\tR\x05Image\x12\x1c\n" +
	"\tStoreName\x18\x03 \x01(\tR\tStoreName\x12\x1c\n" +
	"\tStoreInfo\x18\x04 \x01(\tR\tStoreInfo\x12\x16\n" +
	"\x06CateId\x18\x05 \x01(\tR\x06CateId\x12\x14\n" +
	"\x05Price\x18\x06 \x01(\x02R\x05Price\x12\x1a\n" +
	"\bVipPrice\x18\a \x01(\x02R\bVipPrice\x12\x14\n" +
	"\x05Sales\x18\b \x01(\x03R\x05Sales\x12\x14\n" +
	"\x05Stock\x18\t \x01(\x03R\x05Stock\x12\x1c\n" +
	"\tIsPostage\x18\n" +
	" \x01(\x03R\tIsPostage\x12\x16\n" +
	"\x06Browse\x18\v \x01(\x03R\x06Browse\x12\x18\n" +
	"\aKeyword\x18\f \x01(\tR\aKeyword\"Z\n" +
	"\x10AddToCartRequest\x12\x16\n" +
	"\x06UserId\x18\x01 \x01(\x03R\x06UserId\x12\x1c\n" +
	"\tProductId\x18\x02 \x01(\x03R\tProductId\x12\x10\n" +
	"\x03Num\x18\x03 \x01(\x03R\x03Num\"-\n" +
	"\x11AddToCartResponse\x12\x18\n" +
	"\aSuccess\x18\x01 \x01(\bR\aSuccess\"\xa3\x02\n" +
	"\x11AddProductRequest\x12\x14\n" +
	"\x05MerId\x18\x01 \x01(\x03R\x05MerId\x12\x14\n" +
	"\x05Image\x18\x02 \x01(\tR\x05Image\x12\x1c\n" +
	"\tStoreName\x18\x03 \x01(\tR\tStoreName\x12\x1c\n" +
	"\tStoreInfo\x18\x04 \x01(\tR\tStoreInfo\x12\x18\n" +
	"\aKeyword\x18\x05 \x01(\tR\aKeyword\x12\x16\n" +
	"\x06CateId\x18\x06 \x01(\tR\x06CateId\x12\x14\n" +
	"\x05Price\x18\a \x01(\x02R\x05Price\x12\x1a\n" +
	"\bVipPrice\x18\b \x01(\x02R\bVipPrice\x12\x18\n" +
	"\aOtPrice\x18\t \x01(\x02R\aOtPrice\x12\x12\n" +
	"\x04Cost\x18\n" +
	" \x01(\x02R\x04Cost\x12\x14\n" +
	"\x05Stock\x18\v \x01(\x03R\x05Stock\"2\n" +
	"\x12AddProductResponse\x12\x1c\n" +
	"\tProductId\x18\x01 \x01(\x03R\tProductId\"\x91\x02\n" +
	"\x1bCreateBargainProductRequest\x12\x1c\n" +
	"\tProductId\x18\x01 \x01(\x03R\tProductId\x12\x14\n" +
	"\x05Title\x18\x02 \x01(\tR\x05Title\x12\x14\n" +
	"\x05Stock\x18\x03 \x01(\x03R\x05Stock\x12\x1c\n" +
	"\tStartTime\x18\x04 \x01(\tR\tStartTime\x12\x1a\n" +
	"\bStopTime\x18\x05 \x01(\tR\bStopTime\x12\x1a\n" +
	"\bMinPrice\x18\x06 \x01(\x02R\bMinPrice\x12(\n" +
	"\x0fBargainMaxPrice\x18\a \x01(\x03R\x0fBargainMaxPrice\x12(\n" +
	"\x0fBargainMinPrice\x18\b \x01(\x03R\x0fBargainMinPrice\"6\n" +
	"\x1cCreateBargainProductResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\x03R\x06result\"N\n" +
	"\x18MerchantDeleteProRequest\x12\x14\n" +
	"\x05MerId\x18\x01 \x01(\x03R\x05MerId\x12\x1c\n" +
	"\tProductId\x18\x02 \x01(\x03R\tProductId\"5\n" +
	"\x19MerchantDeleteProResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"J\n" +
	"\x18CreateBargainUserRequest\x12\x10\n" +
	"\x03Uid\x18\x01 \x01(\x03R\x03Uid\x12\x1c\n" +
	"\tBargainId\x18\x02 \x01(\x03R\tBargainId\"M\n" +
	"\x19CreateBargainUserResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\x03R\x06result\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"/\n" +
	"\x15CartTotalPriceRequest\x12\x16\n" +
	"\x06UserId\x18\x01 \x01(\x03R\x06UserId\"8\n" +
	"\x16CartTotalPriceResponse\x12\x1e\n" +
	"\n" +
	"TotalPrice\x18\x01 \x01(\x02R\n" +
	"TotalPrice\"\xc6\x02\n" +
	"\x16AddGroupProductRequest\x12\x14\n" +
	"\x05MerId\x18\x01 \x01(\x03R\x05MerId\x12\x1c\n" +
	"\tProductId\x18\x02 \x01(\x03R\tProductId\x12\x14\n" +
	"\x05Title\x18\x03 \x01(\tR\x05Title\x12\x12\n" +
	"\x04Attr\x18\x04 \x01(\tR\x04Attr\x12\x16\n" +
	"\x06People\x18\x05 \x01(\x03R\x06People\x12\x12\n" +
	"\x04Info\x18\x06 \x01(\tR\x04Info\x12\x14\n" +
	"\x05Price\x18\a \x01(\x02R\x05Price\x12\x12\n" +
	"\x04Sort\x18\b \x01(\x03R\x04Sort\x12\x14\n" +
	"\x05Sales\x18\t \x01(\x03R\x05Sales\x12\x14\n" +
	"\x05Stock\x18\n" +
	" \x01(\x03R\x05Stock\x12\x1c\n" +
	"\tStartTime\x18\v \x01(\tR\tStartTime\x12\x1a\n" +
	"\bStopTime\x18\f \x01(\tR\bStopTime\x12\x12\n" +
	"\x04Cost\x18\r \x01(\x03R\x04Cost\"9\n" +
	"\x17AddGroupProductResponse\x12\x1e\n" +
	"\n" +
	"GProductId\x18\x01 \x01(\x03R\n" +
	"GProductId\"\x94\x01\n" +
	"\x1cCreateBargainUserHelpRequest\x12\x10\n" +
	"\x03Uid\x18\x01 \x01(\rR\x03Uid\x12\x1c\n" +
	"\tBargainId\x18\x02 \x01(\rR\tBargainId\x12$\n" +
	"\rBargainUserId\x18\x03 \x01(\rR\rBargainUserId\x12\x1e\n" +
	"\n" +
	"InviteCode\x18\x04 \x01(\tR\n" +
	"InviteCode\"Q\n" +
	"\x1dCreateBargainUserHelpResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\x03R\x06result\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"O\n" +
	"\x19RemoveGroupProductRequest\x12\x14\n" +
	"\x05MerId\x18\x01 \x01(\x03R\x05MerId\x12\x1c\n" +
	"\tProductId\x18\x02 \x01(\x03R\tProductId\"6\n" +
	"\x1aRemoveGroupProductResponse\x12\x18\n" +
	"\aMessage\x18\x01 \x01(\tR\aMessage\"N\n" +
	"\x16CreateUserGroupRequest\x12\x10\n" +
	"\x03Uid\x18\x01 \x01(\x03R\x03Uid\x12\x10\n" +
	"\x03Cid\x18\x02 \x01(\x03R\x03Cid\x12\x10\n" +
	"\x03Num\x18\x03 \x01(\x03R\x03Num\"\xa3\x01\n" +
	"\x17CreateUserGroupResponse\x12\x1a\n" +
	"\bUGroupId\x18\x01 \x01(\x03R\bUGroupId\x12\x1e\n" +
	"\n" +
	"InviteCode\x18\x02 \x01(\tR\n" +
	"InviteCode\x12\"\n" +
	"\fNowPeopleNum\x18\x03 \x01(\x03R\fNowPeopleNum\x12\x16\n" +
	"\x06Status\x18\x04 \x01(\tR\x06Status\x12\x10\n" +
	"\x03Url\x18\x05 \x01(\tR\x03Url\"\x14\n" +
	"\x12ProductListRequest\"?\n" +
	"\x13ProductListResponse\x12(\n" +
	"\x04List\x18\x01 \x03(\v2\x14.product.ProductItemR\x04List\"\xa5\x01\n" +
	"\vProductItem\x12\x1c\n" +
	"\tStoreName\x18\x01 \x01(\tR\tStoreName\x12\x1c\n" +
	"\tStoreInfo\x18\x02 \x01(\tR\tStoreInfo\x12\x16\n" +
	"\x06CateId\x18\x03 \x01(\tR\x06CateId\x12\x14\n" +
	"\x05Price\x18\x04 \x01(\x02R\x05Price\x12\x14\n" +
	"\x05Sales\x18\x05 \x01(\x03R\x05Sales\x12\x16\n" +
	"\x06Browse\x18\x06 \x01(\x03R\x06Browse\"\x88\x01\n" +
	"\x10AddCouponRequest\x12\x14\n" +
	"\x05Title\x18\x01 \x01(\tR\x05Title\x12\x1a\n" +
	"\bIntegral\x18\x02 \x01(\x03R\bIntegral\x12 \n" +
	"\vCouponPrice\x18\x03 \x01(\x02R\vCouponPrice\x12 \n" +
	"\vUseMinPrice\x18\x04 \x01(\x02R\vUseMinPrice\"/\n" +
	"\x11AddCouponResponse\x12\x1a\n" +
	"\bCouponId\x18\x01 \x01(\x03R\bCouponId\"\xb4\x01\n" +
	"\x18MerAddCouponStoreRequest\x12\x14\n" +
	"\x05MerId\x18\x01 \x01(\x03R\x05MerId\x12\x10\n" +
	"\x03Cid\x18\x02 \x01(\x03R\x03Cid\x12\x1c\n" +
	"\tStartTime\x18\x03 \x01(\tR\tStartTime\x12\x1a\n" +
	"\bStopTime\x18\x04 \x01(\tR\bStopTime\x12\x10\n" +
	"\x03Num\x18\x05 \x01(\x03R\x03Num\x12$\n" +
	"\rFullReduction\x18\x06 \x01(\x02R\rFullReduction\"3\n" +
	"\x19MerAddCouponStoreResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\x03R\x06result\"E\n" +
	"\x1bMerDeleteCouponStoreRequest\x12\x14\n" +
	"\x05MerId\x18\x01 \x01(\x03R\x05MerId\x12\x10\n" +
	"\x03Cid\x18\x02 \x01(\x03R\x03Cid\"8\n" +
	"\x1cMerDeleteCouponStoreResponse\x12\x18\n" +
	"\aMessage\x18\x01 \x01(\tR\aMessage\"\xae\x01\n" +
	"\x16AddSpikeProductRequest\x12\x1c\n" +
	"\tProductId\x18\x01 \x01(\x03R\tProductId\x12\x1e\n" +
	"\n" +
	"SpikePrice\x18\x02 \x01(\x02R\n" +
	"SpikePrice\x12\x1e\n" +
	"\n" +
	"SpikeStock\x18\x03 \x01(\x03R\n" +
	"SpikeStock\x12\x1c\n" +
	"\tStartTime\x18\x04 \x01(\tR\tStartTime\x12\x18\n" +
	"\aEndTime\x18\x05 \x01(\tR\aEndTime\"7\n" +
	"\x17AddSpikeProductResponse\x12\x1c\n" +
	"\tProductId\x18\x01 \x01(\x03R\tProductId\"T\n" +
	"\x10FlashSaleRequest\x12(\n" +
	"\x0fSpikeProductsId\x18\x01 \x01(\x03R\x0fSpikeProductsId\x12\x16\n" +
	"\x06UserId\x18\x02 \x01(\x03R\x06UserId\"-\n" +
	"\x11FlashSaleResponse\x12\x18\n" +
	"\aSuccess\x18\x01 \x01(\tR\aSuccess\"t\n" +
	"\x14UserJoinGroupRequest\x12\x10\n" +
	"\x03Uid\x18\x01 \x01(\x03R\x03Uid\x12\x10\n" +
	"\x03Cid\x18\x02 \x01(\x03R\x03Cid\x12\x10\n" +
	"\x03Num\x18\x03 \x01(\x03R\x03Num\x12&\n" +
	"\x0eInvitationCode\x18\x04 \x01(\tR\x0eInvitationCode\"\x7f\n" +
	"\x15UserJoinGroupResponse\x12\x1a\n" +
	"\bUGroupId\x18\x01 \x01(\x03R\bUGroupId\x12 \n" +
	"\vProductName\x18\x02 \x01(\tR\vProductName\x12\x16\n" +
	"\x06Status\x18\x03 \x01(\tR\x06Status\x12\x10\n" +
	"\x03Url\x18\x04 \x01(\tR\x03Url\"0\n" +
	"\x18ProductCreateToESRequest\x12\x14\n" +
	"\x05table\x18\x01 \x01(\tR\x05table\"5\n" +
	"\x19ProductCreateToESResponse\x12\x18\n" +
	"\aSuccess\x18\x01 \x01(\bR\aSuccess\",\n" +
	"\x16ProductSearchESRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"F\n" +
	"\x17ProductSearchESResponse\x12+\n" +
	"\x04List\x18\x01 \x03(\v2\x17.product.NewProductListR\x04List2\xfe\x0f\n" +
	"\aProduct\x12H\n" +
	"\vProductInfo\x12\x1b.product.ProductInfoRequest\x1a\x1c.product.ProductInfoResponse\x12N\n" +
	"\rProductFilter\x12\x1d.product.ProductFilterRequest\x1a\x1e.product.ProductFilterResponse\x12T\n" +
	"\x0fProductCategory\x12\x1f.product.ProductCategoryRequest\x1a .product.ProductCategoryResponse\x12Q\n" +
	"\x0eProductKeyword\x12\x1e.product.ProductKeywordRequest\x1a\x1f.product.ProductKeywordResponse\x12W\n" +
	"\x10ProductRecommend\x12 .product.ProductRecommendRequest\x1a!.product.ProductRecommendResponse\x12B\n" +
	"\tAddToCart\x12\x19.product.AddToCartRequest\x1a\x1a.product.AddToCartResponse\x12c\n" +
	"\x14CreateBargainProduct\x12$.product.CreateBargainProductRequest\x1a%.product.CreateBargainProductResponse\x12E\n" +
	"\n" +
	"AddProduct\x12\x1a.product.AddProductRequest\x1a\x1b.product.AddProductResponse\x12Z\n" +
	"\x11MerchantDeletePro\x12!.product.MerchantDeleteProRequest\x1a\".product.MerchantDeleteProResponse\x12Z\n" +
	"\x11CreateBargainUser\x12!.product.CreateBargainUserRequest\x1a\".product.CreateBargainUserResponse\x12T\n" +
	"\x0fAddGroupProduct\x12\x1f.product.AddGroupProductRequest\x1a .product.AddGroupProductResponse\x12]\n" +
	"\x12RemoveGroupProduct\x12\".product.RemoveGroupProductRequest\x1a#.product.RemoveGroupProductResponse\x12T\n" +
	"\x0fCreateUserGroup\x12\x1f.product.CreateUserGroupRequest\x1a .product.CreateUserGroupResponse\x12f\n" +
	"\x15CreateBargainUserHelp\x12%.product.CreateBargainUserHelpRequest\x1a&.product.CreateBargainUserHelpResponse\x12Q\n" +
	"\x0eCartTotalPrice\x12\x1e.product.CartTotalPriceRequest\x1a\x1f.product.CartTotalPriceResponse\x12H\n" +
	"\vProductList\x12\x1b.product.ProductListRequest\x1a\x1c.product.ProductListResponse\x12B\n" +
	"\tAddCoupon\x12\x19.product.AddCouponRequest\x1a\x1a.product.AddCouponResponse\x12Z\n" +
	"\x11MerAddCouponStore\x12!.product.MerAddCouponStoreRequest\x1a\".product.MerAddCouponStoreResponse\x12c\n" +
	"\x14MerDeleteCouponStore\x12$.product.MerDeleteCouponStoreRequest\x1a%.product.MerDeleteCouponStoreResponse\x12T\n" +
	"\x0fAddSpikeProduct\x12\x1f.product.AddSpikeProductRequest\x1a .product.AddSpikeProductResponse\x12B\n" +
	"\tFlashSale\x12\x19.product.FlashSaleRequest\x1a\x1a.product.FlashSaleResponse\x12N\n" +
	"\rUserJoinGroup\x12\x1d.product.UserJoinGroupRequest\x1a\x1e.product.UserJoinGroupResponse\x12Z\n" +
	"\x11ProductCreateToES\x12!.product.ProductCreateToESRequest\x1a\".product.ProductCreateToESResponse\x12T\n" +
	"\x0fProductSearchES\x12\x1f.product.ProductSearchESRequest\x1a .product.ProductSearchESResponseB\vZ\t.;productb\x06proto3"
=======
type ProductItems struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ProductId     int64                  `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	Num           int64                  `protobuf:"varint,3,opt,name=Num,proto3" json:"Num,omitempty"`
	Price         float32                `protobuf:"fixed32,4,opt,name=Price,proto3" json:"Price,omitempty"`
	ProductName   string                 `protobuf:"bytes,5,opt,name=ProductName,proto3" json:"ProductName,omitempty"`
	Check         int64                  `protobuf:"varint,6,opt,name=Check,proto3" json:"Check,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductItems) Reset() {
	*x = ProductItems{}
	mi := &file_product_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductItems) ProtoMessage() {}

func (x *ProductItems) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductItems.ProtoReflect.Descriptor instead.
func (*ProductItems) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{57}
}

func (x *ProductItems) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ProductItems) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ProductItems) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *ProductItems) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductItems) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *ProductItems) GetCheck() int64 {
	if x != nil {
		return x.Check
	}
	return 0
}

// todo:统计购物车商品总数量
type CartProductCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartProductCountRequest) Reset() {
	*x = CartProductCountRequest{}
	mi := &file_product_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartProductCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartProductCountRequest) ProtoMessage() {}

func (x *CartProductCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartProductCountRequest.ProtoReflect.Descriptor instead.
func (*CartProductCountRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{58}
}

func (x *CartProductCountRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CartProductCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartProductCountResponse) Reset() {
	*x = CartProductCountResponse{}
	mi := &file_product_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartProductCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartProductCountResponse) ProtoMessage() {}

func (x *CartProductCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartProductCountResponse.ProtoReflect.Descriptor instead.
func (*CartProductCountResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{59}
}

func (x *CartProductCountResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// todo: 计算购物车中商品的总价
type CartProductTotalPriceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartProductTotalPriceRequest) Reset() {
	*x = CartProductTotalPriceRequest{}
	mi := &file_product_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartProductTotalPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartProductTotalPriceRequest) ProtoMessage() {}

func (x *CartProductTotalPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartProductTotalPriceRequest.ProtoReflect.Descriptor instead.
func (*CartProductTotalPriceRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{60}
}

func (x *CartProductTotalPriceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CartProductTotalPriceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalPrice    float32                `protobuf:"fixed32,1,opt,name=TotalPrice,proto3" json:"TotalPrice,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartProductTotalPriceResponse) Reset() {
	*x = CartProductTotalPriceResponse{}
	mi := &file_product_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartProductTotalPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartProductTotalPriceResponse) ProtoMessage() {}

func (x *CartProductTotalPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartProductTotalPriceResponse.ProtoReflect.Descriptor instead.
func (*CartProductTotalPriceResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{61}
}

func (x *CartProductTotalPriceResponse) GetTotalPrice() float32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

var File_product_proto protoreflect.FileDescriptor

var file_product_proto_rawDesc = string([]byte{
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x31, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x45, 0x0a, 0x16, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4e, 0x65,
	0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x47, 0x0a,
	0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x8d, 0x03, 0x0a, 0x0b,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4d,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x43, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x53, 0x68, 0x6f,
	0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x49, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x43,
	0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x47, 0x6f, 0x6f, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x49, 0x73, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x42,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x42, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x50, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x22, 0x30, 0x0a, 0x16, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x43, 0x0a,
	0x17, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xd0, 0x02, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x15, 0x0a,
	0x06, 0x69, 0x73, 0x5f, 0x68, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69,
	0x73, 0x48, 0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x62, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x62, 0x65, 0x73, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x42, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73,
	0x4e, 0x65, 0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x53, 0x65, 0x63, 0x6b, 0x69,
	0x6c, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xbe, 0x02, 0x0a, 0x0e,
	0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x4d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x69, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x56, 0x69, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09,
	0x49, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x49, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x42, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x5a, 0x0a, 0x10,
	0x41, 0x64, 0x64, 0x54, 0x6f, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x22, 0x2d, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x54,
	0x6f, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xa3, 0x02, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x4d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x43, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x43, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x56, 0x69, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x56, 0x69, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x4f, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x04, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0x32, 0x0a,
	0x12, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x22, 0x91, 0x02, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x72, 0x67,
	0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x6f,
	0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x74, 0x6f,
	0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x4d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x4d, 0x61, 0x78, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x42, 0x61, 0x72, 0x67,
	0x61, 0x69, 0x6e, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x42,
	0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x4d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x4d, 0x69, 0x6e,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x36, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4e, 0x0a,
	0x18, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x35, 0x0a,
	0x19, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x4a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61,
	0x72, 0x67, 0x61, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x55,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x22, 0x33, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2f, 0x0a, 0x15, 0x43, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x16, 0x43, 0x61, 0x72, 0x74, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x22, 0xc6, 0x02, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4d,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x74, 0x74, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x74, 0x74, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x6f,
	0x70, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x50, 0x65, 0x6f, 0x70, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x6f,
	0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x74, 0x6f,
	0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x73, 0x74, 0x22, 0x39, 0x0a, 0x17, 0x41, 0x64, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x47, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x47, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61,
	0x72, 0x67, 0x61, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x42, 0x61, 0x72, 0x67, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x42, 0x61, 0x72,
	0x67, 0x61, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x1d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x48,
	0x65, 0x6c, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x4f, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x4d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x4d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4e, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x43, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x22, 0xa3, 0x01, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4e, 0x6f, 0x77, 0x50, 0x65, 0x6f, 0x70, 0x6c,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x4e, 0x6f, 0x77, 0x50,
	0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55,
	0x72, 0x6c, 0x22, 0x14, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x0b, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x42, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x22, 0x88, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x73,
	0x65, 0x4d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x55, 0x73, 0x65, 0x4d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x2f, 0x0a, 0x11,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xb4, 0x01,
	0x0a, 0x18, 0x4d, 0x65, 0x72, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x43, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x43,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x12, 0x24,
	0x0a, 0x0d, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x33, 0x0a, 0x19, 0x4d, 0x65, 0x72, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x45, 0x0a, 0x1b, 0x4d, 0x65, 0x72,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x43, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x43, 0x69, 0x64,
	0x22, 0x38, 0x0a, 0x1c, 0x4d, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x16, 0x41,
	0x64, 0x64, 0x53, 0x70, 0x69, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x70, 0x69, 0x6b, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x53, 0x70, 0x69, 0x6b, 0x65, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x70, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x70, 0x69, 0x6b, 0x65, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x17, 0x41,
	0x64, 0x64, 0x53, 0x70, 0x69, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x10, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x53, 0x61, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x70, 0x69, 0x6b,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x53, 0x70, 0x69, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x11, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x74, 0x0a, 0x14, 0x55, 0x73, 0x65,
	0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x55, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x43, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x7f, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c,
	0x22, 0x58, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x22, 0x2b, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x65, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x61, 0x72, 0x74, 0x49, 0x64, 0x22, 0x32,
	0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x5b, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x22,
	0x2e, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x2a, 0x0a, 0x10, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x11, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x30, 0x0a, 0x16, 0x43, 0x61,
	0x72, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x17,
	0x43, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x22, 0x31, 0x0a, 0x17, 0x43, 0x61, 0x72,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x18,
	0x43, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x36,
	0x0a, 0x1c, 0x43, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x1d, 0x43, 0x61, 0x72, 0x74, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x32, 0xff, 0x12, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x48, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x43, 0x61, 0x72, 0x74, 0x12, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x43, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x72,
	0x67, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x72, 0x67,
	0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5a, 0x0a, 0x11, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a,
	0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x66, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x72, 0x67,
	0x61, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x6c, 0x70, 0x12, 0x25, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x72, 0x67,
	0x61, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65,
	0x6c, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x43, 0x61,
	0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x4d,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4d, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x14, 0x4d, 0x65, 0x72, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12,
	0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x4d, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f,
	0x41, 0x64, 0x64, 0x53, 0x70, 0x69, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x70, 0x69,
	0x6b, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x70,
	0x69, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x53, 0x61, 0x6c, 0x65, 0x12,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x53,
	0x61, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f,
	0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72,
	0x74, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x43,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x72, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42,
	0x0a, 0x09, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x72, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x43, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x43, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x43, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x43, 0x61, 0x72, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x66, 0x0a, 0x15, 0x43, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x3b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a

var (
	file_product_proto_rawDescOnce sync.Once
	file_product_proto_rawDescData []byte
)

func file_product_proto_rawDescGZIP() []byte {
	file_product_proto_rawDescOnce.Do(func() {
		file_product_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_product_proto_rawDesc), len(file_product_proto_rawDesc)))
	})
	return file_product_proto_rawDescData
}

<<<<<<< HEAD
var file_product_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
=======
var file_product_proto_msgTypes = make([]protoimpl.MessageInfo, 62)
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
var file_product_proto_goTypes = []any{
	(*ProductKeywordRequest)(nil),         // 0: product.ProductKeywordRequest
	(*ProductKeywordResponse)(nil),        // 1: product.ProductKeywordResponse
	(*ProductRecommendRequest)(nil),       // 2: product.ProductRecommendRequest
	(*ProductRecommendResponse)(nil),      // 3: product.ProductRecommendResponse
	(*ProductInfoRequest)(nil),            // 4: product.ProductInfoRequest
	(*ProductInfoResponse)(nil),           // 5: product.ProductInfoResponse
	(*ProductList)(nil),                   // 6: product.ProductList
	(*ProductCategoryRequest)(nil),        // 7: product.ProductCategoryRequest
	(*ProductCategoryResponse)(nil),       // 8: product.ProductCategoryResponse
	(*ProductFilterRequest)(nil),          // 9: product.ProductFilterRequest
	(*ProductFilterResponse)(nil),         // 10: product.ProductFilterResponse
	(*NewProductList)(nil),                // 11: product.NewProductList
	(*AddToCartRequest)(nil),              // 12: product.AddToCartRequest
	(*AddToCartResponse)(nil),             // 13: product.AddToCartResponse
	(*AddProductRequest)(nil),             // 14: product.AddProductRequest
	(*AddProductResponse)(nil),            // 15: product.AddProductResponse
	(*CreateBargainProductRequest)(nil),   // 16: product.CreateBargainProductRequest
	(*CreateBargainProductResponse)(nil),  // 17: product.CreateBargainProductResponse
	(*MerchantDeleteProRequest)(nil),      // 18: product.MerchantDeleteProRequest
	(*MerchantDeleteProResponse)(nil),     // 19: product.MerchantDeleteProResponse
	(*CreateBargainUserRequest)(nil),      // 20: product.CreateBargainUserRequest
	(*CreateBargainUserResponse)(nil),     // 21: product.CreateBargainUserResponse
	(*CartTotalPriceRequest)(nil),         // 22: product.CartTotalPriceRequest
	(*CartTotalPriceResponse)(nil),        // 23: product.CartTotalPriceResponse
	(*AddGroupProductRequest)(nil),        // 24: product.AddGroupProductRequest
	(*AddGroupProductResponse)(nil),       // 25: product.AddGroupProductResponse
	(*CreateBargainUserHelpRequest)(nil),  // 26: product.CreateBargainUserHelpRequest
	(*CreateBargainUserHelpResponse)(nil), // 27: product.CreateBargainUserHelpResponse
	(*RemoveGroupProductRequest)(nil),     // 28: product.RemoveGroupProductRequest
	(*RemoveGroupProductResponse)(nil),    // 29: product.RemoveGroupProductResponse
	(*CreateUserGroupRequest)(nil),        // 30: product.CreateUserGroupRequest
	(*CreateUserGroupResponse)(nil),       // 31: product.CreateUserGroupResponse
	(*ProductListRequest)(nil),            // 32: product.ProductListRequest
	(*ProductListResponse)(nil),           // 33: product.ProductListResponse
	(*ProductItem)(nil),                   // 34: product.ProductItem
	(*AddCouponRequest)(nil),              // 35: product.AddCouponRequest
	(*AddCouponResponse)(nil),             // 36: product.AddCouponResponse
	(*MerAddCouponStoreRequest)(nil),      // 37: product.MerAddCouponStoreRequest
	(*MerAddCouponStoreResponse)(nil),     // 38: product.MerAddCouponStoreResponse
	(*MerDeleteCouponStoreRequest)(nil),   // 39: product.MerDeleteCouponStoreRequest
	(*MerDeleteCouponStoreResponse)(nil),  // 40: product.MerDeleteCouponStoreResponse
	(*AddSpikeProductRequest)(nil),        // 41: product.AddSpikeProductRequest
	(*AddSpikeProductResponse)(nil),       // 42: product.AddSpikeProductResponse
	(*FlashSaleRequest)(nil),              // 43: product.FlashSaleRequest
	(*FlashSaleResponse)(nil),             // 44: product.FlashSaleResponse
	(*UserJoinGroupRequest)(nil),          // 45: product.UserJoinGroupRequest
	(*UserJoinGroupResponse)(nil),         // 46: product.UserJoinGroupResponse
<<<<<<< HEAD
	(*ProductCreateToESRequest)(nil),      // 47: product.ProductCreateToESRequest
	(*ProductCreateToESResponse)(nil),     // 48: product.ProductCreateToESResponse
	(*ProductSearchESRequest)(nil),        // 49: product.ProductSearchESRequest
	(*ProductSearchESResponse)(nil),       // 50: product.ProductSearchESResponse
=======
	(*AddCartRequest)(nil),                // 47: product.AddCartRequest
	(*AddCartResponse)(nil),               // 48: product.AddCartResponse
	(*RemoveFromCartRequest)(nil),         // 49: product.RemoveFromCartRequest
	(*RemoveFromCartResponse)(nil),        // 50: product.RemoveFromCartResponse
	(*UpdateCartRequest)(nil),             // 51: product.UpdateCartRequest
	(*UpdateCartResponse)(nil),            // 52: product.UpdateCartResponse
	(*ClearCartRequest)(nil),              // 53: product.ClearCartRequest
	(*ClearCartResponse)(nil),             // 54: product.ClearCartResponse
	(*CartProductListRequest)(nil),        // 55: product.CartProductListRequest
	(*CartProductListResponse)(nil),       // 56: product.CartProductListResponse
	(*ProductItems)(nil),                  // 57: product.ProductItems
	(*CartProductCountRequest)(nil),       // 58: product.CartProductCountRequest
	(*CartProductCountResponse)(nil),      // 59: product.CartProductCountResponse
	(*CartProductTotalPriceRequest)(nil),  // 60: product.CartProductTotalPriceRequest
	(*CartProductTotalPriceResponse)(nil), // 61: product.CartProductTotalPriceResponse
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
}
var file_product_proto_depIdxs = []int32{
	11, // 0: product.ProductKeywordResponse.list:type_name -> product.NewProductList
	11, // 1: product.ProductRecommendResponse.list:type_name -> product.NewProductList
	6,  // 2: product.ProductInfoResponse.list:type_name -> product.ProductList
	6,  // 3: product.ProductCategoryResponse.list:type_name -> product.ProductList
	11, // 4: product.ProductFilterResponse.list:type_name -> product.NewProductList
	34, // 5: product.ProductListResponse.List:type_name -> product.ProductItem
<<<<<<< HEAD
	11, // 6: product.ProductSearchESResponse.List:type_name -> product.NewProductList
=======
	57, // 6: product.CartProductListResponse.List:type_name -> product.ProductItems
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
	4,  // 7: product.Product.ProductInfo:input_type -> product.ProductInfoRequest
	9,  // 8: product.Product.ProductFilter:input_type -> product.ProductFilterRequest
	7,  // 9: product.Product.ProductCategory:input_type -> product.ProductCategoryRequest
	0,  // 10: product.Product.ProductKeyword:input_type -> product.ProductKeywordRequest
	2,  // 11: product.Product.ProductRecommend:input_type -> product.ProductRecommendRequest
	12, // 12: product.Product.AddToCart:input_type -> product.AddToCartRequest
	16, // 13: product.Product.CreateBargainProduct:input_type -> product.CreateBargainProductRequest
	14, // 14: product.Product.AddProduct:input_type -> product.AddProductRequest
	18, // 15: product.Product.MerchantDeletePro:input_type -> product.MerchantDeleteProRequest
	20, // 16: product.Product.CreateBargainUser:input_type -> product.CreateBargainUserRequest
	24, // 17: product.Product.AddGroupProduct:input_type -> product.AddGroupProductRequest
	28, // 18: product.Product.RemoveGroupProduct:input_type -> product.RemoveGroupProductRequest
	30, // 19: product.Product.CreateUserGroup:input_type -> product.CreateUserGroupRequest
	26, // 20: product.Product.CreateBargainUserHelp:input_type -> product.CreateBargainUserHelpRequest
	22, // 21: product.Product.CartTotalPrice:input_type -> product.CartTotalPriceRequest
	32, // 22: product.Product.ProductList:input_type -> product.ProductListRequest
	35, // 23: product.Product.AddCoupon:input_type -> product.AddCouponRequest
	37, // 24: product.Product.MerAddCouponStore:input_type -> product.MerAddCouponStoreRequest
	39, // 25: product.Product.MerDeleteCouponStore:input_type -> product.MerDeleteCouponStoreRequest
	41, // 26: product.Product.AddSpikeProduct:input_type -> product.AddSpikeProductRequest
	43, // 27: product.Product.FlashSale:input_type -> product.FlashSaleRequest
	45, // 28: product.Product.UserJoinGroup:input_type -> product.UserJoinGroupRequest
<<<<<<< HEAD
	47, // 29: product.Product.ProductCreateToES:input_type -> product.ProductCreateToESRequest
	49, // 30: product.Product.ProductSearchES:input_type -> product.ProductSearchESRequest
	5,  // 31: product.Product.ProductInfo:output_type -> product.ProductInfoResponse
	10, // 32: product.Product.ProductFilter:output_type -> product.ProductFilterResponse
	8,  // 33: product.Product.ProductCategory:output_type -> product.ProductCategoryResponse
	1,  // 34: product.Product.ProductKeyword:output_type -> product.ProductKeywordResponse
	3,  // 35: product.Product.ProductRecommend:output_type -> product.ProductRecommendResponse
	13, // 36: product.Product.AddToCart:output_type -> product.AddToCartResponse
	17, // 37: product.Product.CreateBargainProduct:output_type -> product.CreateBargainProductResponse
	15, // 38: product.Product.AddProduct:output_type -> product.AddProductResponse
	19, // 39: product.Product.MerchantDeletePro:output_type -> product.MerchantDeleteProResponse
	21, // 40: product.Product.CreateBargainUser:output_type -> product.CreateBargainUserResponse
	25, // 41: product.Product.AddGroupProduct:output_type -> product.AddGroupProductResponse
	29, // 42: product.Product.RemoveGroupProduct:output_type -> product.RemoveGroupProductResponse
	31, // 43: product.Product.CreateUserGroup:output_type -> product.CreateUserGroupResponse
	27, // 44: product.Product.CreateBargainUserHelp:output_type -> product.CreateBargainUserHelpResponse
	23, // 45: product.Product.CartTotalPrice:output_type -> product.CartTotalPriceResponse
	33, // 46: product.Product.ProductList:output_type -> product.ProductListResponse
	36, // 47: product.Product.AddCoupon:output_type -> product.AddCouponResponse
	38, // 48: product.Product.MerAddCouponStore:output_type -> product.MerAddCouponStoreResponse
	40, // 49: product.Product.MerDeleteCouponStore:output_type -> product.MerDeleteCouponStoreResponse
	42, // 50: product.Product.AddSpikeProduct:output_type -> product.AddSpikeProductResponse
	44, // 51: product.Product.FlashSale:output_type -> product.FlashSaleResponse
	46, // 52: product.Product.UserJoinGroup:output_type -> product.UserJoinGroupResponse
	48, // 53: product.Product.ProductCreateToES:output_type -> product.ProductCreateToESResponse
	50, // 54: product.Product.ProductSearchES:output_type -> product.ProductSearchESResponse
	31, // [31:55] is the sub-list for method output_type
	7,  // [7:31] is the sub-list for method input_type
=======
	47, // 29: product.Product.AddCart:input_type -> product.AddCartRequest
	49, // 30: product.Product.RemoveFromCart:input_type -> product.RemoveFromCartRequest
	51, // 31: product.Product.UpdateCart:input_type -> product.UpdateCartRequest
	53, // 32: product.Product.ClearCart:input_type -> product.ClearCartRequest
	55, // 33: product.Product.CartProductList:input_type -> product.CartProductListRequest
	58, // 34: product.Product.CartProductCount:input_type -> product.CartProductCountRequest
	60, // 35: product.Product.CartProductTotalPrice:input_type -> product.CartProductTotalPriceRequest
	5,  // 36: product.Product.ProductInfo:output_type -> product.ProductInfoResponse
	10, // 37: product.Product.ProductFilter:output_type -> product.ProductFilterResponse
	8,  // 38: product.Product.ProductCategory:output_type -> product.ProductCategoryResponse
	1,  // 39: product.Product.ProductKeyword:output_type -> product.ProductKeywordResponse
	3,  // 40: product.Product.ProductRecommend:output_type -> product.ProductRecommendResponse
	13, // 41: product.Product.AddToCart:output_type -> product.AddToCartResponse
	17, // 42: product.Product.CreateBargainProduct:output_type -> product.CreateBargainProductResponse
	15, // 43: product.Product.AddProduct:output_type -> product.AddProductResponse
	19, // 44: product.Product.MerchantDeletePro:output_type -> product.MerchantDeleteProResponse
	21, // 45: product.Product.CreateBargainUser:output_type -> product.CreateBargainUserResponse
	25, // 46: product.Product.AddGroupProduct:output_type -> product.AddGroupProductResponse
	29, // 47: product.Product.RemoveGroupProduct:output_type -> product.RemoveGroupProductResponse
	31, // 48: product.Product.CreateUserGroup:output_type -> product.CreateUserGroupResponse
	27, // 49: product.Product.CreateBargainUserHelp:output_type -> product.CreateBargainUserHelpResponse
	23, // 50: product.Product.CartTotalPrice:output_type -> product.CartTotalPriceResponse
	33, // 51: product.Product.ProductList:output_type -> product.ProductListResponse
	36, // 52: product.Product.AddCoupon:output_type -> product.AddCouponResponse
	38, // 53: product.Product.MerAddCouponStore:output_type -> product.MerAddCouponStoreResponse
	40, // 54: product.Product.MerDeleteCouponStore:output_type -> product.MerDeleteCouponStoreResponse
	42, // 55: product.Product.AddSpikeProduct:output_type -> product.AddSpikeProductResponse
	44, // 56: product.Product.FlashSale:output_type -> product.FlashSaleResponse
	46, // 57: product.Product.UserJoinGroup:output_type -> product.UserJoinGroupResponse
	48, // 58: product.Product.AddCart:output_type -> product.AddCartResponse
	50, // 59: product.Product.RemoveFromCart:output_type -> product.RemoveFromCartResponse
	52, // 60: product.Product.UpdateCart:output_type -> product.UpdateCartResponse
	54, // 61: product.Product.ClearCart:output_type -> product.ClearCartResponse
	56, // 62: product.Product.CartProductList:output_type -> product.CartProductListResponse
	59, // 63: product.Product.CartProductCount:output_type -> product.CartProductCountResponse
	61, // 64: product.Product.CartProductTotalPrice:output_type -> product.CartProductTotalPriceResponse
	36, // [36:65] is the sub-list for method output_type
	7,  // [7:36] is the sub-list for method input_type
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_product_proto_init() }
func file_product_proto_init() {
	if File_product_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_product_proto_rawDesc), len(file_product_proto_rawDesc)),
			NumEnums:      0,
<<<<<<< HEAD
			NumMessages:   51,
=======
			NumMessages:   62,
>>>>>>> 2ab2026dfb7ca4598fa3797350b539a74f09e08a
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_product_proto_goTypes,
		DependencyIndexes: file_product_proto_depIdxs,
		MessageInfos:      file_product_proto_msgTypes,
	}.Build()
	File_product_proto = out.File
	file_product_proto_goTypes = nil
	file_product_proto_depIdxs = nil
}
